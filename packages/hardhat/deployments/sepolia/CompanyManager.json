{
  "address": "0xc0C2Fe0ee01b9405343F0C222bdEfE8481bf1057",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "acceptCredit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextInstallmentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalInstallments",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct CompanyManager.Credit",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addFundsCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "key",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_numberInstallment",
          "type": "uint256"
        }
      ],
      "name": "addInstallment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "companies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "companyAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "avaiableBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        }
      ],
      "name": "credits",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextInstallmentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInstallments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_creditId",
          "type": "uint256"
        }
      ],
      "name": "getCredit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextInstallmentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalInstallments",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct CompanyManager.Credit",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "installments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberInstallment",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "payInstallment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "recentCredits",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextInstallmentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInstallments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_companyAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "registerCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalInstallments",
          "type": "uint256"
        }
      ],
      "name": "registerCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendViaCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStats",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditsReceived",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditsPaid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "avaiableOnTimeScore",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasActiveCredit",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "registerBy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawOwnerFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5928c4c0df132a00ec2f8efa18c69fe9c0d1696851d3a1797b0fd935b26bd35f",
  "receipt": {
    "to": null,
    "from": "0x47b43F926D08c81646833290eD4156E7ccEC7503",
    "contractAddress": "0xc0C2Fe0ee01b9405343F0C222bdEfE8481bf1057",
    "transactionIndex": 116,
    "gasUsed": "1866181",
    "logsBloom": "0x
    "blockHash": "0xd6e16d9eb4625b42957132a41ba73599e72e5dd6318dbcf3eb4920b0088e8191",
    "transactionHash": "0x5928c4c0df132a00ec2f8efa18c69fe9c0d1696851d3a1797b0fd935b26bd35f",
    "logs": [],
    "blockNumber": 7910640,
    "cumulativeGasUsed": "10063460",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238"
  ],
  "numDeployments": 1,
  "solcInputHash": "ee3a1e62088c93c21b5e418a0bfd59cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"acceptCredit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct CompanyManager.Credit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addFundsCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberInstallment\",\"type\":\"uint256\"}],\"name\":\"addInstallment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"companies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"companyAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaiableBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"}],\"name\":\"credits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creditId\",\"type\":\"uint256\"}],\"name\":\"getCredit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct CompanyManager.Credit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"installments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberInstallment\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payInstallment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"recentCredits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_companyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"name\":\"registerCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalInstallments\",\"type\":\"uint256\"}],\"name\":\"registerCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendViaCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStats\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditsReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditsPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaiableOnTimeScore\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasActiveCredit\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"registerBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawOwnerFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompanyManager.sol\":\"CompanyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/CompanyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract CompanyManager {\\n    address public owner;\\n    IERC20 public usdc;\\n    uint256 public creditCounter;\\n    uint256 public ownerBalance;\\n\\n    struct Company {\\n        bool isWhitelisted;\\n        uint256 balance;\\n        uint256 premium;\\n        address companyAddress;\\n        bool isActive;\\n        uint256 protocolFee;\\n        uint256 creditBalance;\\n        uint256 avaiableBalance;\\n    }\\n\\n    mapping(address => Company) public companies;\\n\\n    struct User {\\n        address owner;\\n        uint256 creditScore;\\n        bool hasActiveCredit;\\n        address registerBy;\\n    }\\n\\n    struct UserStats {\\n        bool exists;\\n        address user;\\n        uint256 creditsReceived;\\n        uint256 creditsPaid;\\n        uint256 score;\\n        uint256 avaiableOnTimeScore;\\n    }\\n\\n    mapping(address => UserStats) public userStats;\\n\\n    struct Credit {\\n        address user;\\n        uint256 amount; // monto prestado\\n        address lender;\\n        uint256 rate; // %5\\n        uint256 nextInstallmentDate;\\n        uint256 totalInstallments;\\n        uint256 protocolFee;\\n        uint256 totalAmount; // motno + fee + interes\\n        uint256 id;\\n        bool isActive;\\n        bool isPaid;\\n    }\\n\\n    struct installment {\\n        uint256 creditId;\\n        uint256 amount;\\n        uint256 numberInstallment;\\n        bool isPaid;\\n        uint256 score;\\n        uint256 date;\\n    }\\n\\n    mapping(uint256 creditId => installment[]) public installments;\\n\\n    function addInstallment(\\n        uint256 key,\\n        uint256 _amount,\\n        uint256 _numberInstallment\\n    ) public {\\n        installment memory newInstallment = installment({\\n            creditId: key,\\n            amount: _amount,\\n            numberInstallment: _numberInstallment,\\n            isPaid: false,\\n            score: _amount,\\n            date: block.timestamp + (30 days * (_numberInstallment + 1))\\n        });\\n\\n        // Agregar el nuevo installment al array dentro del mapping\\n        installments[key].push(newInstallment);\\n    }\\n\\n    mapping(uint256 creditId => Credit) public credits;\\n    mapping(address user => Credit) public recentCredits;\\n\\n    mapping(address user => User) public users;\\n\\n    constructor(address _usdcAddress) {\\n        owner = msg.sender;\\n        creditCounter = 0;\\n        usdc = IERC20(_usdcAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyWhitelisted() {\\n        require(\\n            companies[msg.sender].isWhitelisted == true,\\n            \\\"Company is not whitelisted\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyActive() {\\n        require(\\n            companies[msg.sender].isActive == true,\\n            \\\"Company is not active\\\"\\n        );\\n        _;\\n    }\\n\\n    function registerCompany(\\n        address _companyAddress,\\n        uint256 _protocolFee\\n    ) external onlyOwner {\\n        companies[_companyAddress].isWhitelisted = true;\\n        companies[_companyAddress].companyAddress = _companyAddress;\\n        companies[_companyAddress].isActive = true;\\n        companies[_companyAddress].balance = 0;\\n        companies[_companyAddress].creditBalance = 0;\\n        companies[_companyAddress].avaiableBalance = 0;\\n        companies[_companyAddress].protocolFee = _protocolFee;\\n    }\\n\\n    function addFundsCompany(\\n        uint256 _amount\\n    ) external onlyActive onlyWhitelisted {\\n        // Transfer USDC from the caller to the contract\\n        require(\\n            usdc.transferFrom(msg.sender, address(this), _amount),\\n            \\\"USDC transfer failed\\\"\\n        );\\n\\n        // Calculate the owner's share (protocol fee)\\n        uint256 _ownerAmount = (_amount * companies[msg.sender].protocolFee) /\\n            100;\\n\\n        // Update the company's balance and available balance\\n        companies[msg.sender].balance += _amount - _ownerAmount;\\n        companies[msg.sender].avaiableBalance += _amount - _ownerAmount;\\n\\n        // Update the owner's balance\\n        ownerBalance += _ownerAmount;\\n    }\\n\\n    function withdrawFundsCompany(\\n        uint256 _amount\\n    ) external onlyActive onlyWhitelisted {\\n        // Ensure the company has sufficient balance\\n        require(\\n            companies[msg.sender].balance >= _amount,\\n            \\\"No hay suficiente fondos\\\"\\n        );\\n\\n        // Update the company's balance\\n        companies[msg.sender].balance -= _amount;\\n\\n        // Transfer USDC tokens to the company\\n        bool success = usdc.transfer(msg.sender, _amount);\\n        require(success, \\\"Transferencia fallida\\\");\\n    }\\n\\n    function withdrawOwnerFunds(uint256 _amount) external onlyOwner {\\n        require(ownerBalance >= _amount, \\\"No hay suficiente fondos\\\");\\n        ownerBalance -= _amount;\\n        bool success = usdc.transfer(msg.sender, _amount);\\n        require(success, \\\"Transferencia fallida\\\");\\n    }\\n\\n    function registerUser(\\n        address _userAddress\\n    ) external onlyActive onlyWhitelisted {\\n        users[_userAddress].owner = _userAddress;\\n        users[_userAddress].hasActiveCredit = false;\\n        users[_userAddress].registerBy = msg.sender;\\n        userStats[msg.sender].exists = true;\\n    }\\n\\n    function registerCredit(\\n        address _user,\\n        uint256 _amount,\\n        uint256 _rate,\\n        uint256 _totalInstallments\\n    ) external onlyActive onlyWhitelisted {\\n        require(\\n            companies[msg.sender].avaiableBalance >= _amount,\\n            \\\"Fondos insuficientes\\\"\\n        );\\n        require(\\n            users[_user].hasActiveCredit == false,\\n            \\\"El usuario ya tiene creditos activos\\\"\\n        );\\n       \\n        require(_totalInstallments <= 36, \\\"Maximo 36 cuotas\\\");\\n        require(_rate <= 100, \\\"Tasa de interes maxima 100%\\\");\\n        require(_rate > 0, \\\"Tasa de interes minima 0%\\\");\\n        require(_totalInstallments >= 4, \\\"Minimo 4 cuotas\\\");\\n\\n        companies[msg.sender].avaiableBalance -= _amount;\\n        companies[msg.sender].creditBalance += _amount;\\n        userStats[msg.sender].exists = true;\\n        userStats[msg.sender].creditsReceived += _amount;\\n\\n        Credit memory credit;\\n\\n        credit.id = creditCounter;\\n        credit.user = _user;\\n        credit.amount = _amount; // monto prestado\\n        credit.lender = msg.sender; // pago por 0% de intereses\\n        credit.rate = _rate; /* %5 */\\n        credit.nextInstallmentDate = block.timestamp + 30 days; // fecha del primer pago por el periodo\\n        credit\\n            .totalInstallments = _totalInstallments; /* cuantas cuotas se prestan */\\n        credit.protocolFee = companies[msg.sender].protocolFee;\\n        credit.totalAmount = _amount + ((_amount * _rate) / 100);\\n\\n        credits[creditCounter] = credit;\\n        recentCredits[_user] = credit;\\n\\n        creditCounter++;\\n    }\\n\\n    function payInstallment(uint256 _amount) external {\\n        require(\\n            recentCredits[msg.sender].isActive == true,\\n            \\\"El credito no esta activo\\\"\\n        );\\n        uint256 _creditId = recentCredits[msg.sender].id;\\n        uint256 _installmentId = 0;\\n\\n        for (uint256 i = 0; i < installments[_creditId].length; i++) {\\n            if (installments[_creditId][i].isPaid == false) {\\n                _installmentId = i;\\n                break;\\n            }\\n        }\\n\\n        require(\\n            _amount == installments[_creditId][_installmentId].amount,\\n            \\\"El monto pagado no es correcto\\\"\\n        );\\n        require(\\n            usdc.transferFrom(msg.sender, address(this), _amount),\\n            \\\"USDC transfer failed\\\"\\n        );\\n\\n        uint256 _date = installments[_creditId][_installmentId].date;\\n\\n        installments[_creditId][_installmentId].isPaid = true;\\n        installments[_creditId][_installmentId].date = block.timestamp;\\n\\n        installments[_creditId][_installmentId].score = _amount;\\n\\n        companies[credits[_creditId].lender].avaiableBalance += _amount;\\n        unchecked {\\n            if (_amount >= companies[credits[_creditId].lender].creditBalance) {\\n                companies[credits[_creditId].lender].creditBalance = 0;\\n            } else {\\n                companies[credits[_creditId].lender].creditBalance -= _amount;\\n            }\\n        }\\n        uint256 scoreIncrement;\\n        if (block.timestamp < (_date - 5 days)) {\\n            scoreIncrement = _amount * 2;\\n        } else if (block.timestamp < (_date + 1 minutes)) {\\n            scoreIncrement = _amount;\\n        } else {\\n            scoreIncrement = _amount;\\n        }\\n\\n        installments[_creditId][_installmentId].score += scoreIncrement;\\n        userStats[credits[_creditId].user].score += scoreIncrement;\\n        userStats[credits[_creditId].user].creditsPaid += _amount;\\n\\n        if (_installmentId == credits[_creditId].totalInstallments - 1) {\\n            credits[_creditId].isPaid = true;\\n            credits[_creditId].isActive = false;\\n            recentCredits[credits[_creditId].user].isActive = false;\\n            recentCredits[credits[_creditId].user].isPaid = true;\\n            users[credits[_creditId].user].hasActiveCredit = false;\\n        }\\n    }\\n\\n    function getCredit(uint256 _creditId) public view returns (Credit memory) {\\n        return credits[_creditId];\\n    }\\n\\n    function acceptCredit() external returns (Credit memory) {\\n        require(\\n            users[msg.sender].hasActiveCredit == false,\\n            \\\"El usuario ya tiene creditos activos\\\"\\n        );\\n        require(\\n            recentCredits[msg.sender].user == msg.sender,\\n            \\\"El credito no pertenece al usuario\\\"\\n        );\\n\\n        users[msg.sender].hasActiveCredit = true;\\n        recentCredits[msg.sender].isActive = true;\\n        uint256 _creditId = recentCredits[msg.sender].id;\\n        credits[_creditId].isActive = true;\\n\\n        for (\\n            uint256 i = 0;\\n            i < recentCredits[msg.sender].totalInstallments;\\n            i++\\n        ) {\\n            addInstallment(\\n                _creditId,\\n                recentCredits[msg.sender].totalAmount /\\n                    recentCredits[msg.sender].totalInstallments,\\n                i\\n            );\\n        }\\n\\n        userStats[msg.sender].creditsReceived += recentCredits[msg.sender]\\n            .amount;\\n        userStats[msg.sender].avaiableOnTimeScore += recentCredits[msg.sender]\\n            .totalAmount;\\n        bool success = usdc.transfer(\\n            msg.sender,\\n            recentCredits[msg.sender].amount\\n        );\\n        require(success, \\\"Transferencia fallida\\\");\\n        return credits[_creditId];\\n    }\\n\\n    function sendViaCall(address _to, uint256 _amount) public returns (bool) {\\n        (bool success, ) = _to.call{value: _amount}(\\\"\\\"); // Send Ether\\n        require(success, \\\"Call failed\\\");\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x13600b102f693395392b191d481a90e45b3255995489d269216d24045ccc59e0\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80638a65d874116100b8578063ad24a2fc1161007c578063ad24a2fc14610514578063b2a164de14610556578063bedcf0031461056d578063da304e4d14610576578063e2f8a01714610589578063e4dc4f551461059c57600080fd5b80638a65d874146103e15780638da5cb5b14610464578063a87430ba14610477578063ac8d7906146104ee578063ad1211be1461050157600080fd5b806342f3aeda116100ff57806342f3aeda1461038057806353f9206f146103935780635f748cbb146103a6578063647fedd3146103bb5780636561b284146103ce57600080fd5b8063036a1c221461013c5780631c8a60951461021f5780632199d5cd14610298578063355e6ce8146102ad5780633e413bee14610355575b600080fd5b6101b461014a366004611c5c565b600760208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701549787015460088801546009909801546001600160a01b039788169996989790951696939592949193909160ff808216916101009004168b565b604080516001600160a01b039c8d168152602081019b909b5298909a16978901979097526060880195909552608087019390935260a086019190915260c085015260e08401526101008301521515610120820152901515610140820152610160015b60405180910390f35b6101b461022d366004611c91565b600860208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154988801546009909801546001600160a01b03978816999698979095169693959294919390929160ff808216916101009004168b565b6102ab6102a6366004611c91565b6105bf565b005b61030e6102bb366004611c91565b6004602081905260009182526040909120805460018201546002830154600384015494840154600585015460069095015460ff94851696939592946001600160a01b03851694600160a01b900416929088565b6040805198151589526020890197909752958701949094526001600160a01b0390921660608601521515608085015260a084015260c083015260e082015261010001610216565b600154610368906001600160a01b031681565b6040516001600160a01b039091168152602001610216565b6102ab61038e366004611cb3565b610698565b6102ab6103a1366004611cec565b610bfb565b6103ae610cc3565b6040516102169190611d18565b6102ab6103c9366004611db4565b61100c565b6102ab6103dc366004611c5c565b611093565b61042d6103ef366004611c91565b6005602052600090815260409020805460018201546002830154600384015460049094015460ff8416946101009094046001600160a01b0316939086565b6040805196151587526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c001610216565b600054610368906001600160a01b031681565b6104bb610485366004611c91565b6009602052600090815260409020805460018201546002909201546001600160a01b03918216929160ff82169161010090041684565b604080516001600160a01b0395861681526020810194909452911515918301919091529091166060820152608001610216565b6102ab6104fc366004611c5c565b61124a565b6102ab61050f366004611c5c565b611426565b610527610522366004611dde565b6114af565b6040805196875260208701959095529385019290925215156060840152608083015260a082015260c001610216565b61055f60025481565b604051908152602001610216565b61055f60035481565b6103ae610584366004611c5c565b611507565b6102ab610597366004611c5c565b6115b9565b6105af6105aa366004611db4565b611b51565b6040519015158152602001610216565b33600090815260046020526040902060030154600160a01b900460ff1615156001146106065760405162461bcd60e51b81526004016105fd90611e00565b60405180910390fd5b3360009081526004602052604090205460ff16151560011461063a5760405162461bcd60e51b81526004016105fd90611e2f565b6001600160a01b0316600081815260096020908152604080832080546001600160a01b0319169094178455600290930180546001600160a81b031916610100339081029190911790915582526005905220805460ff19166001179055565b33600090815260046020526040902060030154600160a01b900460ff1615156001146106d65760405162461bcd60e51b81526004016105fd90611e00565b3360009081526004602052604090205460ff16151560011461070a5760405162461bcd60e51b81526004016105fd90611e2f565b336000908152600460205260409020600601548311156107635760405162461bcd60e51b8152602060048201526014602482015273466f6e646f7320696e737566696369656e74657360601b60448201526064016105fd565b6001600160a01b03841660009081526009602052604090206002015460ff161561079f5760405162461bcd60e51b81526004016105fd90611e66565b60248111156107e35760405162461bcd60e51b815260206004820152601060248201526f4d6178696d6f2033362063756f74617360801b60448201526064016105fd565b60648211156108345760405162461bcd60e51b815260206004820152601b60248201527f5461736120646520696e7465726573206d6178696d612031303025000000000060448201526064016105fd565b600082116108845760405162461bcd60e51b815260206004820152601960248201527f5461736120646520696e7465726573206d696e696d612030250000000000000060448201526064016105fd565b60048110156108c75760405162461bcd60e51b815260206004820152600f60248201526e4d696e696d6f20342063756f74617360881b60448201526064016105fd565b33600090815260046020526040812060060180548592906108e9908490611ec0565b90915550503360009081526004602052604081206005018054859290610910908490611ed3565b9091555050336000908152600560205260408120805460ff191660019081178255018054859290610942908490611ed3565b909155506109509050611bec565b6002546101008201526001600160a01b038516815260208101849052336040820152606081018390526109864262278d00611ed3565b608082015260a08101829052336000908152600460208190526040909120015460c082015260646109b78486611ee6565b6109c19190611efd565b6109cb9085611ed3565b8160e00181815250508060076000600254815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff0219169083151502179055509050508060086000876001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff02191690831515021790555090505060026000815480929190610bef90611f1f565b91905055505050505050565b60006040518060c00160405280858152602001848152602001838152602001600015158152602001848152602001836001610c369190611ed3565b610c439062278d00611ee6565b610c4d9042611ed3565b90526000948552600660208181526040808820805460018082018355918a529883902085519990940290930197885590830151918701919091558101516002860155606081015160038601805460ff19169115159190911790556080810151600486015560a00151600590940193909355505050565b610ccb611bec565b3360009081526009602052604090206002015460ff1615610cfe5760405162461bcd60e51b81526004016105fd90611e66565b336000818152600860205260409020546001600160a01b031614610d6f5760405162461bcd60e51b815260206004820152602260248201527f456c206372656469746f206e6f2070657274656e65636520616c207573756172604482015261696f60f01b60648201526084016105fd565b3360009081526009602081815260408084206002018054600160ff19918216811790925560088085528387208087018054841685179055015480875260079094529185209093018054909116909217909155905b33600090815260086020526040902060050154811015610e1f573360009081526008602052604090206005810154600790910154610e0d918491610e079190611efd565b83610bfb565b80610e1781611f1f565b915050610dc3565b50336000908152600860209081526040808320600190810154600590935290832001805491929091610e52908490611ed3565b90915550503360009081526008602090815260408083206007015460059092528220600401805491929091610e88908490611ed3565b9091555050600180543360008181526008602052604080822090940154935163a9059cbb60e01b8152600481019290925260248201939093526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f199190611f38565b905080610f605760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105fd565b5060009081526007602081815260409283902083516101608101855281546001600160a01b0390811682526001830154938201939093526002820154909216938201939093526003830154606082015260048301546080820152600583015460a0820152600683015460c08201529082015460e082015260088201546101008083019190915260099092015460ff80821615156101208401529290049091161515610140820152919050565b6000546001600160a01b031633146110365760405162461bcd60e51b81526004016105fd90611f5a565b6001600160a01b0390911660008181526004602081905260408220805460ff1916600190811782556003820180546001600160a81b031916909517600160a01b179094559283018290556005830182905560068301919091550155565b33600090815260046020526040902060030154600160a01b900460ff1615156001146110d15760405162461bcd60e51b81526004016105fd90611e00565b3360009081526004602052604090205460ff1615156001146111055760405162461bcd60e51b81526004016105fd90611e2f565b336000908152600460205260409020600101548111156111625760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105fd565b3360009081526004602052604081206001018054839290611184908490611ec0565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff9190611f38565b9050806112465760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105fd565b5050565b33600090815260046020526040902060030154600160a01b900460ff1615156001146112885760405162461bcd60e51b81526004016105fd90611e00565b3360009081526004602052604090205460ff1615156001146112bc5760405162461bcd60e51b81526004016105fd90611e2f565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113379190611f38565b61137a5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105fd565b3360009081526004602081905260408220015460649061139a9084611ee6565b6113a49190611efd565b90506113b08183611ec0565b33600090815260046020526040812060010180549091906113d2908490611ed3565b909155506113e290508183611ec0565b3360009081526004602052604081206006018054909190611404908490611ed3565b92505081905550806003600082825461141d9190611ed3565b90915550505050565b6000546001600160a01b031633146114505760405162461bcd60e51b81526004016105fd90611f5a565b80600354101561149d5760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105fd565b80600360008282546111849190611ec0565b600660205281600052604060002081815481106114cb57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396509194509260ff9091169186565b61150f611bec565b5060009081526007602081815260409283902083516101608101855281546001600160a01b0390811682526001830154938201939093526002820154909216938201939093526003830154606082015260048301546080820152600583015460a0820152600683015460c08201529082015460e082015260088201546101008083019190915260099092015460ff8082161515610120840152929004909116151561014082015290565b3360009081526008602052604090206009015460ff1615156001146116205760405162461bcd60e51b815260206004820152601960248201527f456c206372656469746f206e6f20657374612061637469766f0000000000000060448201526064016105fd565b3360009081526008602081905260408220015490805b6000838152600660205260409020548110156116a457600083815260066020526040902080548290811061166c5761166c611f9b565b6000918252602082206003600690920201015460ff1615159003611692578091506116a4565b8061169c81611f1f565b915050611636565b5060008281526006602052604090208054829081106116c5576116c5611f9b565b90600052602060002090600602016001015483146117255760405162461bcd60e51b815260206004820152601e60248201527f456c206d6f6e746f2070616761646f206e6f20657320636f72726563746f000060448201526064016105fd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561177c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a09190611f38565b6117e35760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105fd565b600082815260066020526040812080548390811061180357611803611f9b565b9060005260206000209060060201600501549050600160066000858152602001908152602001600020838154811061183d5761183d611f9b565b906000526020600020906006020160030160006101000a81548160ff0219169083151502179055504260066000858152602001908152602001600020838154811061188a5761188a611f9b565b906000526020600020906006020160050181905550836006600085815260200190815260200160002083815481106118c4576118c4611f9b565b60009182526020808320600692830201600490810194909455868352600781526040808420600201546001600160a01b031684529390529181209091018054869290611911908490611ed3565b90915550506000838152600760209081526040808320600201546001600160a01b0316835260049091529020600501548410611977576000838152600760209081526040808320600201546001600160a01b0316835260049091528120600501556119a9565b6000838152600760209081526040808320600201546001600160a01b0316835260049091529020600501805485900390555b60006119b86206978083611ec0565b4210156119d1576119ca856002611ee6565b90506119ed565b6119dc82603c611ed3565b4210156119ea5750836119ed565b50835b6000848152600660205260409020805482919085908110611a1057611a10611f9b565b90600052602060002090600602016004016000828254611a309190611ed3565b90915550506000848152600760209081526040808320546001600160a01b03168352600590915281206003018054839290611a6c908490611ed3565b90915550506000848152600760209081526040808320546001600160a01b03168352600590915281206002018054879290611aa8908490611ed3565b9091555050600084815260076020526040902060050154611acb90600190611ec0565b8303611b4a5760008481526007602090815260408083206009808201805461ffff191661010090811790915582546001600160a01b039081168752600886528487208301805460ff199081169091558454821688528588208401805461ff00191690931790925592549092168552909252909120600201805490911690555b5050505050565b600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611b9f576040519150601f19603f3d011682016040523d82523d6000602084013e611ba4565b606091505b5050905080611be35760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016105fd565b90505b92915050565b60405180610160016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b600060208284031215611c6e57600080fd5b5035919050565b80356001600160a01b0381168114611c8c57600080fd5b919050565b600060208284031215611ca357600080fd5b611cac82611c75565b9392505050565b60008060008060808587031215611cc957600080fd5b611cd285611c75565b966020860135965060408601359560600135945092505050565b600080600060608486031215611d0157600080fd5b505081359360208301359350604090920135919050565b81516001600160a01b031681526101608101602083015160208301526040830151611d4e60408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611da18285018215159052565b5050610140928301511515919092015290565b60008060408385031215611dc757600080fd5b611dd083611c75565b946020939093013593505050565b60008060408385031215611df157600080fd5b50508035926020909101359150565b602080825260159082015274436f6d70616e79206973206e6f742061637469766560581b604082015260600190565b6020808252601a908201527f436f6d70616e79206973206e6f742077686974656c6973746564000000000000604082015260600190565b60208082526024908201527f456c207573756172696f207961207469656e65206372656469746f732061637460408201526369766f7360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b81810381811115611be657611be6611eaa565b80820180821115611be657611be6611eaa565b8082028115828204841417611be657611be6611eaa565b600082611f1a57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611f3157611f31611eaa565b5060010190565b600060208284031215611f4a57600080fd5b81518015158114611be357600080fd5b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201bf60a9b1a490d99fb3757e23c0e7a8aee93ebd77486e47d38bbb960d6d80cc364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "usdc",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 87,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "creditCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "ownerBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 111,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "companies",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Company)106_storage)"
      },
      {
        "astId": 138,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "userStats",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(UserStats)133_storage)"
      },
      {
        "astId": 180,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "installments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_array(t_struct(installment)174_storage)dyn_storage)"
      },
      {
        "astId": 223,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "credits",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Credit)161_storage)"
      },
      {
        "astId": 228,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "recentCredits",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Credit)161_storage)"
      },
      {
        "astId": 233,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "users",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(User)120_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(installment)174_storage)dyn_storage": {
        "base": "t_struct(installment)174_storage",
        "encoding": "dynamic_array",
        "label": "struct CompanyManager.installment[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Company)106_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.Company)",
        "numberOfBytes": "32",
        "value": "t_struct(Company)106_storage"
      },
      "t_mapping(t_address,t_struct(Credit)161_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.Credit)",
        "numberOfBytes": "32",
        "value": "t_struct(Credit)161_storage"
      },
      "t_mapping(t_address,t_struct(User)120_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)120_storage"
      },
      "t_mapping(t_address,t_struct(UserStats)133_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.UserStats)",
        "numberOfBytes": "32",
        "value": "t_struct(UserStats)133_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(installment)174_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CompanyManager.installment[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(installment)174_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Credit)161_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CompanyManager.Credit)",
        "numberOfBytes": "32",
        "value": "t_struct(Credit)161_storage"
      },
      "t_struct(Company)106_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.Company",
        "members": [
          {
            "astId": 91,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 93,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 95,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "premium",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 97,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "companyAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 99,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isActive",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 101,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "protocolFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 103,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 105,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "avaiableBalance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Credit)161_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.Credit",
        "members": [
          {
            "astId": 140,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 142,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 144,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "lender",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 146,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "rate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 148,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "nextInstallmentDate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 150,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "totalInstallments",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "protocolFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "totalAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 156,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "id",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 158,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isActive",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          },
          {
            "astId": 160,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isPaid",
            "offset": 1,
            "slot": "9",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(User)120_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.User",
        "members": [
          {
            "astId": 113,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 115,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditScore",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 117,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "hasActiveCredit",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 119,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "registerBy",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(UserStats)133_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.UserStats",
        "members": [
          {
            "astId": 122,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "exists",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 124,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "user",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 126,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditsReceived",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditsPaid",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 130,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "score",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 132,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "avaiableOnTimeScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(installment)174_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.installment",
        "members": [
          {
            "astId": 163,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 165,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "numberInstallment",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 169,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isPaid",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 171,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "score",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 173,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "date",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}