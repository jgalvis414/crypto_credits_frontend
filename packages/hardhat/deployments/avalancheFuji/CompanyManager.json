{
  "address": "0x6156108D82393179a467fCC3F9FF876A6b93886d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "acceptCredit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextInstallmentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalInstallments",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct CompanyManager.Credit",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addFundsCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "companies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "companyAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "avaiableBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "companyRegisteredCredits",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextInstallmentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInstallments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        }
      ],
      "name": "credits",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextInstallmentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInstallments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_company",
          "type": "address"
        }
      ],
      "name": "getCompanyCredits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextInstallmentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalInstallments",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            }
          ],
          "internalType": "struct CompanyManager.Credit[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "installments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "creditId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberInstallment",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "payInstallment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "recentCredits",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextInstallmentDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInstallments",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_companyAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "registerCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalInstallments",
          "type": "uint256"
        }
      ],
      "name": "registerCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStats",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditsReceived",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditsPaid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "avaiableOnTimeScore",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasActiveCredit",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "registerBy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawOwnerFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3fe1a4b0ebefbba403a7cff110728b8a7e9460e9bc50b1f13a9898278ad86fd0",
  "receipt": {
    "to": null,
    "from": "0x47b43F926D08c81646833290eD4156E7ccEC7503",
    "contractAddress": "0x6156108D82393179a467fCC3F9FF876A6b93886d",
    "transactionIndex": 0,
    "gasUsed": "2075792",
    "logsBloom": "0x
    "blockHash": "0xc186d0c2af585f64cc3909b1d1d10e619b70ffb49b671f939b68e7bba173876e",
    "transactionHash": "0x3fe1a4b0ebefbba403a7cff110728b8a7e9460e9bc50b1f13a9898278ad86fd0",
    "logs": [],
    "blockNumber": 38859603,
    "cumulativeGasUsed": "2075792",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5425890298aed601595a70AB815c96711a31Bc65"
  ],
  "numDeployments": 1,
  "solcInputHash": "2cbffdddd8aeded67d63d9e765cbe177",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"acceptCredit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct CompanyManager.Credit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addFundsCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"companies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"companyAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaiableBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"companyRegisteredCredits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"}],\"name\":\"credits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_company\",\"type\":\"address\"}],\"name\":\"getCompanyCredits\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct CompanyManager.Credit[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"installments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creditId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberInstallment\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payInstallment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"recentCredits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextInstallmentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInstallments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_companyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"name\":\"registerCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalInstallments\",\"type\":\"uint256\"}],\"name\":\"registerCredit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStats\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditsReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditsPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaiableOnTimeScore\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasActiveCredit\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"registerBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawOwnerFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompanyManager.sol\":\"CompanyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/CompanyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract CompanyManager {\\n    address public owner;\\n    IERC20 public usdc;\\n    uint256 public creditCounter;\\n    uint256 public ownerBalance;\\n\\n    struct Company {\\n        bool isWhitelisted;\\n        uint256 balance;\\n        uint256 premium;\\n        address companyAddress;\\n        bool isActive;\\n        uint256 protocolFee;\\n        uint256 creditBalance;\\n        uint256 avaiableBalance;\\n    }\\n\\n    mapping(address => Company) public companies;\\n\\n    struct User {\\n        address owner;\\n        uint256 creditScore;\\n        bool hasActiveCredit;\\n        address registerBy;\\n    }\\n\\n    struct UserStats {\\n        bool exists;\\n        address user;\\n        uint256 creditsReceived;\\n        uint256 creditsPaid;\\n        uint256 score;\\n        uint256 avaiableOnTimeScore;\\n    }\\n\\n    mapping(address => UserStats) public userStats;\\n\\n    struct Credit {\\n        address user;\\n        uint256 amount; // monto prestado\\n        address lender;\\n        uint256 rate; // %5\\n        uint256 nextInstallmentDate;\\n        uint256 totalInstallments;\\n        uint256 protocolFee;\\n        uint256 totalAmount; // motno + fee + interes\\n        uint256 id;\\n        bool isActive;\\n        bool isPaid;\\n    }\\n\\n    struct Installment {\\n        uint256 creditId;\\n        uint256 amount;\\n        uint256 numberInstallment;\\n        bool isPaid;\\n        uint256 score;\\n        uint256 date;\\n    }\\n\\n    mapping(uint256 creditId => Installment[]) public installments;\\n\\n    mapping(address company => Credit[]) public companyRegisteredCredits;\\n\\n    function addInstallment(\\n        uint256 key,\\n        uint256 _amount,\\n        uint256 _numberInstallment\\n    ) internal {\\n        Installment memory newInstallment = Installment({\\n            creditId: key,\\n            amount: _amount,\\n            numberInstallment: _numberInstallment,\\n            isPaid: false,\\n            score: _amount,\\n            date: block.timestamp + (30 days * (_numberInstallment + 1))\\n        });\\n\\n        // Agregar el nuevo installment al array dentro del mapping\\n        installments[key].push(newInstallment);\\n    }\\n\\n    mapping(uint256 creditId => Credit) public credits;\\n    mapping(address user => Credit) public recentCredits;\\n\\n    mapping(address user => User) public users;\\n\\n    constructor(address _usdcAddress) {\\n        owner = msg.sender;\\n        creditCounter = 0;\\n        usdc = IERC20(_usdcAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\n        _;\\n    }\\n\\n    modifier onlyWhitelisted() {\\n        require(\\n            companies[msg.sender].isWhitelisted == true,\\n            \\\"Company is not whitelisted\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyActive() {\\n        require(\\n            companies[msg.sender].isActive == true,\\n            \\\"Company is not active\\\"\\n        );\\n        _;\\n    }\\n\\n    function registerCompany(\\n        address _companyAddress,\\n        uint256 _protocolFee\\n    ) external onlyOwner {\\n        companies[_companyAddress].isWhitelisted = true;\\n        companies[_companyAddress].companyAddress = _companyAddress;\\n        companies[_companyAddress].isActive = true;\\n        companies[_companyAddress].balance = 0;\\n        companies[_companyAddress].creditBalance = 0;\\n        companies[_companyAddress].avaiableBalance = 0;\\n        companies[_companyAddress].protocolFee = _protocolFee;\\n    }\\n\\n    function addFundsCompany(\\n        uint256 _amount\\n    ) external onlyActive onlyWhitelisted {\\n        // Transfer USDC from the caller to the contract\\n        require(\\n            usdc.transferFrom(msg.sender, address(this), _amount),\\n            \\\"USDC transfer failed\\\"\\n        );\\n\\n        // Calculate the owner's share (protocol fee)\\n        uint256 _ownerAmount = (_amount * companies[msg.sender].protocolFee) /\\n            100;\\n\\n        // Update the company's balance and available balance\\n        companies[msg.sender].balance += _amount - _ownerAmount;\\n        companies[msg.sender].avaiableBalance += _amount - _ownerAmount;\\n\\n        // Update the owner's balance\\n        ownerBalance += _ownerAmount;\\n    }\\n\\n    function withdrawFundsCompany(\\n        uint256 _amount\\n    ) external onlyActive onlyWhitelisted {\\n        // Ensure the company has sufficient balance\\n        require(\\n            companies[msg.sender].balance >= _amount,\\n            \\\"No hay suficiente fondos\\\"\\n        );\\n\\n        // Update the company's balance\\n        companies[msg.sender].balance -= _amount;\\n        companies[msg.sender].avaiableBalance -= _amount;\\n\\n        // Transfer USDC tokens to the company\\n        bool success = usdc.transfer(msg.sender, _amount);\\n        require(success, \\\"Transferencia fallida\\\");\\n    }\\n\\n    function withdrawOwnerFunds(uint256 _amount) external onlyOwner {\\n        require(ownerBalance >= _amount, \\\"No hay suficiente fondos\\\");\\n        ownerBalance -= _amount;\\n        bool success = usdc.transfer(msg.sender, _amount);\\n        require(success, \\\"Transferencia fallida\\\");\\n    }\\n\\n    function registerUser(\\n        address _userAddress\\n    ) external onlyActive onlyWhitelisted {\\n        users[_userAddress].owner = _userAddress;\\n        users[_userAddress].hasActiveCredit = false;\\n        users[_userAddress].registerBy = msg.sender;\\n        userStats[msg.sender].exists = true;\\n    }\\n\\n    function registerCredit(\\n        address _user,\\n        uint256 _amount,\\n        uint256 _rate,\\n        uint256 _totalInstallments\\n    ) external onlyActive onlyWhitelisted {\\n        require(\\n            companies[msg.sender].avaiableBalance >= _amount,\\n            \\\"Fondos insuficientes\\\"\\n        );\\n        require(\\n            users[_user].hasActiveCredit == false,\\n            \\\"El usuario ya tiene creditos activos\\\"\\n        );\\n        require(\\n            _rate > 0 && _totalInstallments >= 4,\\n            \\\"Las opciones ingresadas no son validas\\\"\\n        );\\n\\n        companies[msg.sender].avaiableBalance -= _amount;\\n        companies[msg.sender].creditBalance += _amount;\\n        userStats[msg.sender].exists = true;\\n        userStats[msg.sender].creditsReceived += _amount;\\n\\n        Credit memory credit;\\n\\n        credit.id = creditCounter;\\n        credit.user = _user;\\n        credit.amount = _amount; // monto prestado\\n        credit.lender = msg.sender; // pago por 0% de intereses\\n        credit.rate = _rate; /* %5 */\\n        credit.nextInstallmentDate = block.timestamp + 30 days; // fecha del primer pago por el periodo\\n        credit\\n            .totalInstallments = _totalInstallments; /* cuantas cuotas se prestan */\\n        credit.protocolFee = companies[msg.sender].protocolFee;\\n        credit.totalAmount = _amount + ((_amount * _rate) / 100);\\n\\n        credits[creditCounter] = credit;\\n        recentCredits[_user] = credit;\\n        companyRegisteredCredits[msg.sender].push(credit);\\n\\n        creditCounter++;\\n    }\\n\\n    function payInstallment(uint256 _amount) external {\\n        require(\\n            recentCredits[msg.sender].isActive == true,\\n            \\\"El credito no esta activo\\\"\\n        );\\n        uint256 _creditId = recentCredits[msg.sender].id;\\n        uint256 _installmentId = 0;\\n\\n        for (uint256 i = 0; i < installments[_creditId].length; i++) {\\n            if (installments[_creditId][i].isPaid == false) {\\n                _installmentId = i;\\n                break;\\n            }\\n        }\\n\\n        require(\\n            _amount == installments[_creditId][_installmentId].amount,\\n            \\\"El monto pagado no es correcto\\\"\\n        );\\n        require(\\n            usdc.transferFrom(msg.sender, address(this), _amount),\\n            \\\"USDC transfer failed\\\"\\n        );\\n\\n        uint256 _date = installments[_creditId][_installmentId].date;\\n\\n        installments[_creditId][_installmentId].isPaid = true;\\n        installments[_creditId][_installmentId].date = block.timestamp;\\n\\n        installments[_creditId][_installmentId].score = _amount;\\n\\n        companies[credits[_creditId].lender].avaiableBalance += _amount;\\n        companies[credits[_creditId].lender].balance += _amount;\\n        unchecked {\\n            if (_amount >= companies[credits[_creditId].lender].creditBalance) {\\n                companies[credits[_creditId].lender].creditBalance = 0;\\n            } else {\\n                companies[credits[_creditId].lender].creditBalance -= _amount;\\n            }\\n        }\\n        uint256 scoreIncrement;\\n        if (block.timestamp < (_date - 5 days)) {\\n            scoreIncrement = _amount * 2;\\n        } else if (block.timestamp < (_date + 1 minutes)) {\\n            scoreIncrement = _amount;\\n        } else {\\n            scoreIncrement = _amount;\\n        }\\n\\n        installments[_creditId][_installmentId].score += scoreIncrement;\\n        userStats[credits[_creditId].user].score += scoreIncrement;\\n        userStats[credits[_creditId].user].creditsPaid += _amount;\\n\\n        if (_installmentId == credits[_creditId].totalInstallments - 1) {\\n            credits[_creditId].isPaid = true;\\n            credits[_creditId].isActive = false;\\n            recentCredits[credits[_creditId].user].isActive = false;\\n            recentCredits[credits[_creditId].user].isPaid = true;\\n            users[credits[_creditId].user].hasActiveCredit = false;\\n            Credit[] storage companyCredits = companyRegisteredCredits[\\n                credits[_creditId].lender\\n            ];\\n            for (uint256 i = 0; i < companyCredits.length; i++) {\\n                if (companyCredits[i].id == _creditId) {\\n                    companyCredits[i] = companyCredits[\\n                        companyCredits.length - 1\\n                    ];\\n                    companyCredits.pop();\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function acceptCredit() external returns (Credit memory) {\\n        require(\\n            users[msg.sender].hasActiveCredit == false,\\n            \\\"El usuario ya tiene creditos activos\\\"\\n        );\\n        require(\\n            recentCredits[msg.sender].user == msg.sender,\\n            \\\"El credito no pertenece al usuario\\\"\\n        );\\n\\n        users[msg.sender].hasActiveCredit = true;\\n        recentCredits[msg.sender].isActive = true;\\n        uint256 _creditId = recentCredits[msg.sender].id;\\n        credits[_creditId].isActive = true;\\n        Credit[] storage companyCredits = companyRegisteredCredits[\\n            credits[_creditId].lender\\n        ];\\n        for (uint256 i = 0; i < companyCredits.length; i++) {\\n            if (companyCredits[i].id == _creditId) {\\n                companyCredits[i].isActive = true;\\n                break;\\n            }\\n        }\\n\\n        for (\\n            uint256 i = 0;\\n            i < recentCredits[msg.sender].totalInstallments;\\n            i++\\n        ) {\\n            addInstallment(\\n                _creditId,\\n                recentCredits[msg.sender].totalAmount /\\n                    recentCredits[msg.sender].totalInstallments,\\n                i\\n            );\\n        }\\n\\n        userStats[msg.sender].creditsReceived += recentCredits[msg.sender]\\n            .amount;\\n        userStats[msg.sender].avaiableOnTimeScore += recentCredits[msg.sender]\\n            .totalAmount;\\n        bool success = usdc.transfer(\\n            msg.sender,\\n            recentCredits[msg.sender].amount\\n        );\\n        require(success, \\\"Transferencia fallida\\\");\\n        return credits[_creditId];\\n    }\\n\\n    function getCompanyCredits(\\n        address _company\\n    ) external view returns (Credit[] memory) {\\n        return companyRegisteredCredits[_company];\\n    }\\n}\",\"keccak256\":\"0x7ec6e201377bc3d63bd2795729915fe077b1dc9af78d1a0b43dd6fb57e4303b2\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516200245a3803806200245a83398101604081905261003191610069565b60008054336001600160a01b0319918216178255600291909155600180549091166001600160a01b0392909216919091179055610099565b60006020828403121561007b57600080fd5b81516001600160a01b038116811461009257600080fd5b9392505050565b6123b180620000a96000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063b2a164de11610071578063b2a164de14610539578063bedcf00314610550578063c52e528214610559578063e2f8a01714610579578063f5fc728c1461058c57600080fd5b80638da5cb5b14610447578063a87430ba1461045a578063ac8d7906146104d1578063ad1211be146104e4578063ad24a2fc146104f757600080fd5b806342f3aeda116100f457806342f3aeda146103765780635f748cbb14610389578063647fedd31461039e5780636561b284146103b15780638a65d874146103c457600080fd5b8063036a1c22146101315780631c8a6095146102155780632199d5cd1461028e578063355e6ce8146102a35780633e413bee1461034b575b600080fd5b6101aa61013f366004611fe0565b600860208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154988801546009909801546001600160a01b03978816999698979095169693959294919390929160ff808216916101009004168b565b604080516001600160a01b039c8d168152602081019b909b5298909a16978901979097526060880195909552608087019390935260a086019190915260c085015260e08401526101008301521515610120820152901515610140820152610160015b60405180910390f35b6101aa610223366004612015565b600960208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015498909901546001600160a01b03978816999698979095169693959294919390929160ff808216916101009004168b565b6102a161029c366004612015565b61059f565b005b6103046102b1366004612015565b6004602081905260009182526040909120805460018201546002830154600384015494840154600585015460069095015460ff94851696939592946001600160a01b03851694600160a01b900416929088565b6040805198151589526020890197909752958701949094526001600160a01b0390921660608601521515608085015260a084015260c083015260e08201526101000161020c565b60015461035e906001600160a01b031681565b6040516001600160a01b03909116815260200161020c565b6102a1610384366004612037565b610678565b610391610c53565b60405161020c9190612104565b6102a16103ac366004612119565b61103c565b6102a16103bf366004611fe0565b6110c3565b6104106103d2366004612015565b6005602052600090815260409020805460018201546002830154600384015460049094015460ff8416946101009094046001600160a01b0316939086565b6040805196151587526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161020c565b60005461035e906001600160a01b031681565b61049e610468366004612015565b600a602052600090815260409020805460018201546002909201546001600160a01b03918216929160ff82169161010090041684565b604080516001600160a01b039586168152602081019490945291151591830191909152909116606082015260800161020c565b6102a16104df366004611fe0565b6112a1565b6102a16104f2366004611fe0565b61147d565b61050a610505366004612143565b611506565b6040805196875260208701959095529385019290925215156060840152608083015260a082015260c00161020c565b61054260025481565b60405190815260200161020c565b61054260035481565b61056c610567366004612015565b61155e565b60405161020c9190612165565b6102a1610587366004611fe0565b61165b565b6101aa61059a366004612119565b611e20565b33600090815260046020526040902060030154600160a01b900460ff1615156001146105e65760405162461bcd60e51b81526004016105dd906121b4565b60405180910390fd5b3360009081526004602052604090205460ff16151560011461061a5760405162461bcd60e51b81526004016105dd906121e3565b6001600160a01b03166000818152600a6020908152604080832080546001600160a01b0319169094178455600290930180546001600160a81b031916610100339081029190911790915582526005905220805460ff19166001179055565b33600090815260046020526040902060030154600160a01b900460ff1615156001146106b65760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146106ea5760405162461bcd60e51b81526004016105dd906121e3565b336000908152600460205260409020600601548311156107435760405162461bcd60e51b8152602060048201526014602482015273466f6e646f7320696e737566696369656e74657360601b60448201526064016105dd565b6001600160a01b0384166000908152600a602052604090206002015460ff161561077f5760405162461bcd60e51b81526004016105dd9061221a565b600082118015610790575060048110155b6107eb5760405162461bcd60e51b815260206004820152602660248201527f4c6173206f7063696f6e657320696e6772657361646173206e6f20736f6e2076604482015265616c6964617360d01b60648201526084016105dd565b336000908152600460205260408120600601805485929061080d908490612274565b90915550503360009081526004602052604081206005018054859290610834908490612287565b9091555050336000908152600560205260408120805460ff191660019081178255018054859290610866908490612287565b909155506108749050611f70565b6002546101008201526001600160a01b038516815260208101849052336040820152606081018390526108aa4262278d00612287565b608082015260a08101829052336000908152600460208190526040909120015460c082015260646108db848661229a565b6108e591906122b1565b6108ef9085612287565b8160e00181815250508060086000600254815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff0219169083151502179055509050508060096000876001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff02191690831515021790555090505060076000336001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff021916908315150217905550505060026000815480929190610c47906122d3565b91905055505050505050565b610c5b611f70565b336000908152600a602052604090206002015460ff1615610c8e5760405162461bcd60e51b81526004016105dd9061221a565b336000818152600960205260409020546001600160a01b031614610cff5760405162461bcd60e51b815260206004820152602260248201527f456c206372656469746f206e6f2070657274656e65636520616c207573756172604482015261696f60f01b60648201526084016105dd565b336000908152600a6020908152604080832060029081018054600160ff199182168117909255600980865284872080820180548416851790556008908101548089529087528588209182018054909316909317909155909101546001600160a01b031684526007909252822090915b8154811015610dee5782828281548110610d8a57610d8a6122ec565b90600052602060002090600a02016008015403610ddc576001828281548110610db557610db56122ec565b60009182526020909120600a90910201600901805460ff1916911515919091179055610dee565b80610de6816122d3565b915050610d6e565b5060005b33600090815260096020526040902060050154811015610e4e573360009081526009602052604090206005810154600790910154610e3c918591610e3691906122b1565b83611ea8565b80610e46816122d3565b915050610df2565b50336000908152600960209081526040808320600190810154600590935290832001805491929091610e81908490612287565b90915550503360009081526009602090815260408083206007015460059092528220600401805491929091610eb7908490612287565b9091555050600180543360008181526009602052604080822090940154935163a9059cbb60e01b8152600481019290925260248201939093526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f489190612302565b905080610f8f5760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105dd565b505060009081526008602081815260409283902083516101608101855281546001600160a01b0390811682526001830154938201939093526002820154909216938201939093526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152600783015460e0820152908201546101008083019190915260099092015460ff80821615156101208401529290049091161515610140820152919050565b6000546001600160a01b031633146110665760405162461bcd60e51b81526004016105dd90612324565b6001600160a01b0390911660008181526004602081905260408220805460ff1916600190811782556003820180546001600160a81b031916909517600160a01b179094559283018290556005830182905560068301919091550155565b33600090815260046020526040902060030154600160a01b900460ff1615156001146111015760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146111355760405162461bcd60e51b81526004016105dd906121e3565b336000908152600460205260409020600101548111156111925760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105dd565b33600090815260046020526040812060010180548392906111b4908490612274565b909155505033600090815260046020526040812060060180548392906111db908490612274565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190612302565b90508061129d5760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105dd565b5050565b33600090815260046020526040902060030154600160a01b900460ff1615156001146112df5760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146113135760405162461bcd60e51b81526004016105dd906121e3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e9190612302565b6113d15760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105dd565b336000908152600460208190526040822001546064906113f1908461229a565b6113fb91906122b1565b90506114078183612274565b3360009081526004602052604081206001018054909190611429908490612287565b9091555061143990508183612274565b336000908152600460205260408120600601805490919061145b908490612287565b9250508190555080600360008282546114749190612287565b90915550505050565b6000546001600160a01b031633146114a75760405162461bcd60e51b81526004016105dd90612324565b8060035410156114f45760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105dd565b80600360008282546111db9190612274565b6006602052816000526040600020818154811061152257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396509194509260ff9091169186565b6001600160a01b0381166000908152600760209081526040808320805482518185028101850190935280835260609492939192909184015b828210156116505760008481526020908190206040805161016081018252600a860290920180546001600160a01b039081168452600180830154858701526002830154909116928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008085019190915260099091015460ff80821615156101208601529190041615156101408301529083529092019101611596565b505050509050919050565b336000908152600960208190526040909120015460ff1615156001146116c35760405162461bcd60e51b815260206004820152601960248201527f456c206372656469746f206e6f20657374612061637469766f0000000000000060448201526064016105dd565b3360009081526009602052604081206008015490805b60008381526006602052604090205481101561174757600083815260066020526040902080548290811061170f5761170f6122ec565b6000918252602082206003600690920201015460ff161515900361173557809150611747565b8061173f816122d3565b9150506116d9565b506000828152600660205260409020805482908110611768576117686122ec565b90600052602060002090600602016001015483146117c85760405162461bcd60e51b815260206004820152601e60248201527f456c206d6f6e746f2070616761646f206e6f20657320636f72726563746f000060448201526064016105dd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561181f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118439190612302565b6118865760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105dd565b60008281526006602052604081208054839081106118a6576118a66122ec565b906000526020600020906006020160050154905060016006600085815260200190815260200160002083815481106118e0576118e06122ec565b906000526020600020906006020160030160006101000a81548160ff0219169083151502179055504260066000858152602001908152602001600020838154811061192d5761192d6122ec565b90600052602060002090600602016005018190555083600660008581526020019081526020016000208381548110611967576119676122ec565b60009182526020808320600692830201600490810194909455868352600881526040808420600201546001600160a01b0316845293905291812090910180548692906119b4908490612287565b90915550506000838152600860209081526040808320600201546001600160a01b031683526004909152812060010180548692906119f3908490612287565b90915550506000838152600860209081526040808320600201546001600160a01b0316835260049091529020600501548410611a59576000838152600860209081526040808320600201546001600160a01b031683526004909152812060050155611a8b565b6000838152600860209081526040808320600201546001600160a01b0316835260049091529020600501805485900390555b6000611a9a6206978083612274565b421015611ab357611aac85600261229a565b9050611acf565b611abe82603c612287565b421015611acc575083611acf565b50835b6000848152600660205260409020805482919085908110611af257611af26122ec565b90600052602060002090600602016004016000828254611b129190612287565b90915550506000848152600860209081526040808320546001600160a01b03168352600590915281206003018054839290611b4e908490612287565b90915550506000848152600860209081526040808320546001600160a01b03168352600590915281206002018054879290611b8a908490612287565b9091555050600084815260086020526040902060050154611bad90600190612274565b8303611e195760008481526008602090815260408083206009808201805461ffff191661010090811790915582546001600160a01b0390811687528286528487208301805460ff19908116909155845482168852858820909301805461ff001916909217909155825481168652600a85528386206002908101805490931690925591015416835260079091528120905b8154811015611e165785828281548110611c5957611c596122ec565b90600052602060002090600a02016008015403611e045781548290611c8090600190612274565b81548110611c9057611c906122ec565b90600052602060002090600a0201828281548110611cb057611cb06122ec565b600091825260209091208254600a9092020180546001600160a01b03199081166001600160a01b039384161782556001808501549083015560028085015490830180549092169316929092179091556003808301549082015560048083015490820155600580830154908201556006808301549082015560078083015490820155600880830154908201556009918201805492909101805460ff938416151560ff19821681178355925461010090819004909416151590930261ff001990921661ffff19909316929092171790558154829080611d8f57611d8f612365565b600082815260208120600a6000199093019283020180546001600160a01b0319908116825560018201839055600282018054909116905560038101829055600481018290556005810182905560068101829055600781018290556008810191909155600901805461ffff191690559055611e16565b80611e0e816122d3565b915050611c3d565b50505b5050505050565b60076020528160005260406000208181548110611e3c57600080fd5b60009182526020909120600a909102018054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169b509699509690941696929591949093929060ff808216916101009004168b565b60006040518060c00160405280858152602001848152602001838152602001600015158152602001848152602001836001611ee39190612287565b611ef09062278d0061229a565b611efa9042612287565b90526000948552600660208181526040808820805460018082018355918a529883902085519990940290930197885590830151918701919091558101516002860155606081015160038601805460ff19169115159190911790556080810151600486015560a00151600590940193909355505050565b60405180610160016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b600060208284031215611ff257600080fd5b5035919050565b80356001600160a01b038116811461201057600080fd5b919050565b60006020828403121561202757600080fd5b61203082611ff9565b9392505050565b6000806000806080858703121561204d57600080fd5b61205685611ff9565b966020860135965060408601359560600135945092505050565b80516001600160a01b031682526020810151602083015260408101516120a160408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201516120f48285018215159052565b5050610140908101511515910152565b61016081016121138284612070565b92915050565b6000806040838503121561212c57600080fd5b61213583611ff9565b946020939093013593505050565b6000806040838503121561215657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156121a857612194838551612070565b928401926101609290920191600101612181565b50909695505050505050565b602080825260159082015274436f6d70616e79206973206e6f742061637469766560581b604082015260600190565b6020808252601a908201527f436f6d70616e79206973206e6f742077686974656c6973746564000000000000604082015260600190565b60208082526024908201527f456c207573756172696f207961207469656e65206372656469746f732061637460408201526369766f7360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156121135761211361225e565b808201808211156121135761211361225e565b80820281158282048414176121135761211361225e565b6000826122ce57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016122e5576122e561225e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561231457600080fd5b8151801515811461203057600080fd5b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b600052603160045260246000fdfea264697066735822122078300b0c4f600e7e3ae47e795b1762bea26a9bcff95cf2c62a154713faf4ecf764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063b2a164de11610071578063b2a164de14610539578063bedcf00314610550578063c52e528214610559578063e2f8a01714610579578063f5fc728c1461058c57600080fd5b80638da5cb5b14610447578063a87430ba1461045a578063ac8d7906146104d1578063ad1211be146104e4578063ad24a2fc146104f757600080fd5b806342f3aeda116100f457806342f3aeda146103765780635f748cbb14610389578063647fedd31461039e5780636561b284146103b15780638a65d874146103c457600080fd5b8063036a1c22146101315780631c8a6095146102155780632199d5cd1461028e578063355e6ce8146102a35780633e413bee1461034b575b600080fd5b6101aa61013f366004611fe0565b600860208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154988801546009909801546001600160a01b03978816999698979095169693959294919390929160ff808216916101009004168b565b604080516001600160a01b039c8d168152602081019b909b5298909a16978901979097526060880195909552608087019390935260a086019190915260c085015260e08401526101008301521515610120820152901515610140820152610160015b60405180910390f35b6101aa610223366004612015565b600960208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015498909901546001600160a01b03978816999698979095169693959294919390929160ff808216916101009004168b565b6102a161029c366004612015565b61059f565b005b6103046102b1366004612015565b6004602081905260009182526040909120805460018201546002830154600384015494840154600585015460069095015460ff94851696939592946001600160a01b03851694600160a01b900416929088565b6040805198151589526020890197909752958701949094526001600160a01b0390921660608601521515608085015260a084015260c083015260e08201526101000161020c565b60015461035e906001600160a01b031681565b6040516001600160a01b03909116815260200161020c565b6102a1610384366004612037565b610678565b610391610c53565b60405161020c9190612104565b6102a16103ac366004612119565b61103c565b6102a16103bf366004611fe0565b6110c3565b6104106103d2366004612015565b6005602052600090815260409020805460018201546002830154600384015460049094015460ff8416946101009094046001600160a01b0316939086565b6040805196151587526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161020c565b60005461035e906001600160a01b031681565b61049e610468366004612015565b600a602052600090815260409020805460018201546002909201546001600160a01b03918216929160ff82169161010090041684565b604080516001600160a01b039586168152602081019490945291151591830191909152909116606082015260800161020c565b6102a16104df366004611fe0565b6112a1565b6102a16104f2366004611fe0565b61147d565b61050a610505366004612143565b611506565b6040805196875260208701959095529385019290925215156060840152608083015260a082015260c00161020c565b61054260025481565b60405190815260200161020c565b61054260035481565b61056c610567366004612015565b61155e565b60405161020c9190612165565b6102a1610587366004611fe0565b61165b565b6101aa61059a366004612119565b611e20565b33600090815260046020526040902060030154600160a01b900460ff1615156001146105e65760405162461bcd60e51b81526004016105dd906121b4565b60405180910390fd5b3360009081526004602052604090205460ff16151560011461061a5760405162461bcd60e51b81526004016105dd906121e3565b6001600160a01b03166000818152600a6020908152604080832080546001600160a01b0319169094178455600290930180546001600160a81b031916610100339081029190911790915582526005905220805460ff19166001179055565b33600090815260046020526040902060030154600160a01b900460ff1615156001146106b65760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146106ea5760405162461bcd60e51b81526004016105dd906121e3565b336000908152600460205260409020600601548311156107435760405162461bcd60e51b8152602060048201526014602482015273466f6e646f7320696e737566696369656e74657360601b60448201526064016105dd565b6001600160a01b0384166000908152600a602052604090206002015460ff161561077f5760405162461bcd60e51b81526004016105dd9061221a565b600082118015610790575060048110155b6107eb5760405162461bcd60e51b815260206004820152602660248201527f4c6173206f7063696f6e657320696e6772657361646173206e6f20736f6e2076604482015265616c6964617360d01b60648201526084016105dd565b336000908152600460205260408120600601805485929061080d908490612274565b90915550503360009081526004602052604081206005018054859290610834908490612287565b9091555050336000908152600560205260408120805460ff191660019081178255018054859290610866908490612287565b909155506108749050611f70565b6002546101008201526001600160a01b038516815260208101849052336040820152606081018390526108aa4262278d00612287565b608082015260a08101829052336000908152600460208190526040909120015460c082015260646108db848661229a565b6108e591906122b1565b6108ef9085612287565b8160e00181815250508060086000600254815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff0219169083151502179055509050508060096000876001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff02191690831515021790555090505060076000336001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055506101408201518160090160016101000a81548160ff021916908315150217905550505060026000815480929190610c47906122d3565b91905055505050505050565b610c5b611f70565b336000908152600a602052604090206002015460ff1615610c8e5760405162461bcd60e51b81526004016105dd9061221a565b336000818152600960205260409020546001600160a01b031614610cff5760405162461bcd60e51b815260206004820152602260248201527f456c206372656469746f206e6f2070657274656e65636520616c207573756172604482015261696f60f01b60648201526084016105dd565b336000908152600a6020908152604080832060029081018054600160ff199182168117909255600980865284872080820180548416851790556008908101548089529087528588209182018054909316909317909155909101546001600160a01b031684526007909252822090915b8154811015610dee5782828281548110610d8a57610d8a6122ec565b90600052602060002090600a02016008015403610ddc576001828281548110610db557610db56122ec565b60009182526020909120600a90910201600901805460ff1916911515919091179055610dee565b80610de6816122d3565b915050610d6e565b5060005b33600090815260096020526040902060050154811015610e4e573360009081526009602052604090206005810154600790910154610e3c918591610e3691906122b1565b83611ea8565b80610e46816122d3565b915050610df2565b50336000908152600960209081526040808320600190810154600590935290832001805491929091610e81908490612287565b90915550503360009081526009602090815260408083206007015460059092528220600401805491929091610eb7908490612287565b9091555050600180543360008181526009602052604080822090940154935163a9059cbb60e01b8152600481019290925260248201939093526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f489190612302565b905080610f8f5760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105dd565b505060009081526008602081815260409283902083516101608101855281546001600160a01b0390811682526001830154938201939093526002820154909216938201939093526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152600783015460e0820152908201546101008083019190915260099092015460ff80821615156101208401529290049091161515610140820152919050565b6000546001600160a01b031633146110665760405162461bcd60e51b81526004016105dd90612324565b6001600160a01b0390911660008181526004602081905260408220805460ff1916600190811782556003820180546001600160a81b031916909517600160a01b179094559283018290556005830182905560068301919091550155565b33600090815260046020526040902060030154600160a01b900460ff1615156001146111015760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146111355760405162461bcd60e51b81526004016105dd906121e3565b336000908152600460205260409020600101548111156111925760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105dd565b33600090815260046020526040812060010180548392906111b4908490612274565b909155505033600090815260046020526040812060060180548392906111db908490612274565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190612302565b90508061129d5760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016105dd565b5050565b33600090815260046020526040902060030154600160a01b900460ff1615156001146112df5760405162461bcd60e51b81526004016105dd906121b4565b3360009081526004602052604090205460ff1615156001146113135760405162461bcd60e51b81526004016105dd906121e3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e9190612302565b6113d15760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105dd565b336000908152600460208190526040822001546064906113f1908461229a565b6113fb91906122b1565b90506114078183612274565b3360009081526004602052604081206001018054909190611429908490612287565b9091555061143990508183612274565b336000908152600460205260408120600601805490919061145b908490612287565b9250508190555080600360008282546114749190612287565b90915550505050565b6000546001600160a01b031633146114a75760405162461bcd60e51b81526004016105dd90612324565b8060035410156114f45760405162461bcd60e51b81526020600482015260186024820152774e6f2068617920737566696369656e746520666f6e646f7360401b60448201526064016105dd565b80600360008282546111db9190612274565b6006602052816000526040600020818154811061152257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396509194509260ff9091169186565b6001600160a01b0381166000908152600760209081526040808320805482518185028101850190935280835260609492939192909184015b828210156116505760008481526020908190206040805161016081018252600a860290920180546001600160a01b039081168452600180830154858701526002830154909116928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008085019190915260099091015460ff80821615156101208601529190041615156101408301529083529092019101611596565b505050509050919050565b336000908152600960208190526040909120015460ff1615156001146116c35760405162461bcd60e51b815260206004820152601960248201527f456c206372656469746f206e6f20657374612061637469766f0000000000000060448201526064016105dd565b3360009081526009602052604081206008015490805b60008381526006602052604090205481101561174757600083815260066020526040902080548290811061170f5761170f6122ec565b6000918252602082206003600690920201015460ff161515900361173557809150611747565b8061173f816122d3565b9150506116d9565b506000828152600660205260409020805482908110611768576117686122ec565b90600052602060002090600602016001015483146117c85760405162461bcd60e51b815260206004820152601e60248201527f456c206d6f6e746f2070616761646f206e6f20657320636f72726563746f000060448201526064016105dd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561181f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118439190612302565b6118865760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b60448201526064016105dd565b60008281526006602052604081208054839081106118a6576118a66122ec565b906000526020600020906006020160050154905060016006600085815260200190815260200160002083815481106118e0576118e06122ec565b906000526020600020906006020160030160006101000a81548160ff0219169083151502179055504260066000858152602001908152602001600020838154811061192d5761192d6122ec565b90600052602060002090600602016005018190555083600660008581526020019081526020016000208381548110611967576119676122ec565b60009182526020808320600692830201600490810194909455868352600881526040808420600201546001600160a01b0316845293905291812090910180548692906119b4908490612287565b90915550506000838152600860209081526040808320600201546001600160a01b031683526004909152812060010180548692906119f3908490612287565b90915550506000838152600860209081526040808320600201546001600160a01b0316835260049091529020600501548410611a59576000838152600860209081526040808320600201546001600160a01b031683526004909152812060050155611a8b565b6000838152600860209081526040808320600201546001600160a01b0316835260049091529020600501805485900390555b6000611a9a6206978083612274565b421015611ab357611aac85600261229a565b9050611acf565b611abe82603c612287565b421015611acc575083611acf565b50835b6000848152600660205260409020805482919085908110611af257611af26122ec565b90600052602060002090600602016004016000828254611b129190612287565b90915550506000848152600860209081526040808320546001600160a01b03168352600590915281206003018054839290611b4e908490612287565b90915550506000848152600860209081526040808320546001600160a01b03168352600590915281206002018054879290611b8a908490612287565b9091555050600084815260086020526040902060050154611bad90600190612274565b8303611e195760008481526008602090815260408083206009808201805461ffff191661010090811790915582546001600160a01b0390811687528286528487208301805460ff19908116909155845482168852858820909301805461ff001916909217909155825481168652600a85528386206002908101805490931690925591015416835260079091528120905b8154811015611e165785828281548110611c5957611c596122ec565b90600052602060002090600a02016008015403611e045781548290611c8090600190612274565b81548110611c9057611c906122ec565b90600052602060002090600a0201828281548110611cb057611cb06122ec565b600091825260209091208254600a9092020180546001600160a01b03199081166001600160a01b039384161782556001808501549083015560028085015490830180549092169316929092179091556003808301549082015560048083015490820155600580830154908201556006808301549082015560078083015490820155600880830154908201556009918201805492909101805460ff938416151560ff19821681178355925461010090819004909416151590930261ff001990921661ffff19909316929092171790558154829080611d8f57611d8f612365565b600082815260208120600a6000199093019283020180546001600160a01b0319908116825560018201839055600282018054909116905560038101829055600481018290556005810182905560068101829055600781018290556008810191909155600901805461ffff191690559055611e16565b80611e0e816122d3565b915050611c3d565b50505b5050505050565b60076020528160005260406000208181548110611e3c57600080fd5b60009182526020909120600a909102018054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169b509699509690941696929591949093929060ff808216916101009004168b565b60006040518060c00160405280858152602001848152602001838152602001600015158152602001848152602001836001611ee39190612287565b611ef09062278d0061229a565b611efa9042612287565b90526000948552600660208181526040808820805460018082018355918a529883902085519990940290930197885590830151918701919091558101516002860155606081015160038601805460ff19169115159190911790556080810151600486015560a00151600590940193909355505050565b60405180610160016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b600060208284031215611ff257600080fd5b5035919050565b80356001600160a01b038116811461201057600080fd5b919050565b60006020828403121561202757600080fd5b61203082611ff9565b9392505050565b6000806000806080858703121561204d57600080fd5b61205685611ff9565b966020860135965060408601359560600135945092505050565b80516001600160a01b031682526020810151602083015260408101516120a160408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201516120f48285018215159052565b5050610140908101511515910152565b61016081016121138284612070565b92915050565b6000806040838503121561212c57600080fd5b61213583611ff9565b946020939093013593505050565b6000806040838503121561215657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156121a857612194838551612070565b928401926101609290920191600101612181565b50909695505050505050565b602080825260159082015274436f6d70616e79206973206e6f742061637469766560581b604082015260600190565b6020808252601a908201527f436f6d70616e79206973206e6f742077686974656c6973746564000000000000604082015260600190565b60208082526024908201527f456c207573756172696f207961207469656e65206372656469746f732061637460408201526369766f7360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156121135761211361225e565b808201808211156121135761211361225e565b80820281158282048414176121135761211361225e565b6000826122ce57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016122e5576122e561225e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561231457600080fd5b8151801515811461203057600080fd5b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b600052603160045260246000fdfea264697066735822122078300b0c4f600e7e3ae47e795b1762bea26a9bcff95cf2c62a154713faf4ecf764736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "usdc",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 87,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "creditCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "ownerBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 111,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "companies",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Company)106_storage)"
      },
      {
        "astId": 138,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "userStats",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(UserStats)133_storage)"
      },
      {
        "astId": 180,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "installments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_array(t_struct(Installment)174_storage)dyn_storage)"
      },
      {
        "astId": 186,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "companyRegisteredCredits",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(Credit)161_storage)dyn_storage)"
      },
      {
        "astId": 229,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "credits",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_struct(Credit)161_storage)"
      },
      {
        "astId": 234,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "recentCredits",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Credit)161_storage)"
      },
      {
        "astId": 239,
        "contract": "contracts/CompanyManager.sol:CompanyManager",
        "label": "users",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_struct(User)120_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Credit)161_storage)dyn_storage": {
        "base": "t_struct(Credit)161_storage",
        "encoding": "dynamic_array",
        "label": "struct CompanyManager.Credit[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Installment)174_storage)dyn_storage": {
        "base": "t_struct(Installment)174_storage",
        "encoding": "dynamic_array",
        "label": "struct CompanyManager.Installment[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(Credit)161_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.Credit[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Credit)161_storage)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Company)106_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.Company)",
        "numberOfBytes": "32",
        "value": "t_struct(Company)106_storage"
      },
      "t_mapping(t_address,t_struct(Credit)161_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.Credit)",
        "numberOfBytes": "32",
        "value": "t_struct(Credit)161_storage"
      },
      "t_mapping(t_address,t_struct(User)120_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)120_storage"
      },
      "t_mapping(t_address,t_struct(UserStats)133_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompanyManager.UserStats)",
        "numberOfBytes": "32",
        "value": "t_struct(UserStats)133_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(Installment)174_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CompanyManager.Installment[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Installment)174_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Credit)161_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CompanyManager.Credit)",
        "numberOfBytes": "32",
        "value": "t_struct(Credit)161_storage"
      },
      "t_struct(Company)106_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.Company",
        "members": [
          {
            "astId": 91,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 93,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 95,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "premium",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 97,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "companyAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 99,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isActive",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 101,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "protocolFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 103,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditBalance",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 105,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "avaiableBalance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Credit)161_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.Credit",
        "members": [
          {
            "astId": 140,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 142,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 144,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "lender",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 146,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "rate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 148,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "nextInstallmentDate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 150,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "totalInstallments",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "protocolFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "totalAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 156,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "id",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 158,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isActive",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          },
          {
            "astId": 160,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isPaid",
            "offset": 1,
            "slot": "9",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Installment)174_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.Installment",
        "members": [
          {
            "astId": 163,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 165,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "numberInstallment",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 169,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "isPaid",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 171,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "score",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 173,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "date",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(User)120_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.User",
        "members": [
          {
            "astId": 113,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 115,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditScore",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 117,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "hasActiveCredit",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 119,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "registerBy",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(UserStats)133_storage": {
        "encoding": "inplace",
        "label": "struct CompanyManager.UserStats",
        "members": [
          {
            "astId": 122,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "exists",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 124,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "user",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 126,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditsReceived",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "creditsPaid",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 130,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "score",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 132,
            "contract": "contracts/CompanyManager.sol:CompanyManager",
            "label": "avaiableOnTimeScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}